{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://developers.reddit.com/schema/config-file.v1.json",
  "title": "Devvit app config file schema",
  "type": "object",
  "description": "A JSON representation of a Devvit app config file.",

  "required": ["name"],
  "anyOf": [
    { "required": ["post"] },
    { "required": ["server"] },
    { "required": ["blocks"] }
  ],
  "properties": {
    "name": {
      "type": "string",
      "description": "App account name and Community URL slug.",
      "minLength": 3,
      "maxLength": 20,
      "pattern": "^[a-z][a-z0-9-]*$"
    },

    "media": {
      "type": "object",
      "description": "Static asset config. All assets are available to the app client and server via the asset plugin. No overlap with the media plugin or permission.",
      "additionalProperties": false,
      "properties": {
        "dir": {
          "type": "string",
          "description": "Public assets path relative project root. All files within are uploaded to Reddit.",
          "default": "assets"
        }
      }
    },

    "permissions": {
      "type": "object",
      "description": "What an app is allowed to do.",
      "additionalProperties": false,
      "properties": {
        "http": {
          "type": "object",
          "description": "HTTP plugin config (`fetch()`).",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enables the HTTP plugin. Defaults to true when `server` is set.",
              "default": true
            },
            "allowedDomains": {
              "type": "array",
              "description": "Domains the app may communicate with. `/api/` is implied and `\"reddit.com\"` or subdomains should not be included.",
              "items": {
                "type": "string",
                "description": "Allowed domain.",
                "examples": ["example.com", "wikipedia.org", "query.wikidata.org"]
              },
              "uniqueItems": true,
              "default": []
            }
          }
        },
        "media": {
          "type": "boolean",
          "description": "Enables the media plugin (uploads).",
          "default": false
        },
        "payments": {
          "type": "boolean",
          "description": "Enables the payments plugin.",
          "default": false
        },
        "realtime": {
          "type": "boolean",
          "description": "Enables the realtime plugin (client and server messaging).",
          "default": false
        },
        "redis": {
          "type": "boolean",
          "description": "Enables the Redis plugin (storage). Defaults to true when `post.create.menu.enable` is set.",
          "default": false
        },
        "reddit": {
          "type": "object",
          "description": "Reddit API plugin config.",
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enables the Reddit API plugin. Defaults to true when `post` is set.",
              "default": true
            },
            "scope": {
              "description": "APIs available. `\"moderator\"` includes all of `\"user\"`.",
              "enum": ["user", "moderator"],
              "default": "user"
            },
            "asUser": {
              "type": "array",
              "description": "APIs to execute from the user account instead of the app account (`name`).",
              "items": {
                "type": "string",
                "description": "API name",
                "examples": ["Submit", "Comment"]
              },
              "uniqueItems": true,
              "default": []
            }
          }
        }
      }
    },

    "post": {
      "type": "object",
      "description": "Custom post config. Web views can only fetch from `/api/` endpoints when `server` is enabled.",
      "additionalProperties": false,
      "properties": {
        "client": {
          "type": "object",
          "description": "Web view config.",
          "additionalProperties": false,
          "properties": {
            "dir": {
              "type": "string",
              "description": "Client directory relative project root for all public web view assets path available to `entry`. All files within are uploaded to Reddit.",
              "default": "src/client"
            },
            "entry": {
              "type": "string",
              "description": "Web view document shown in the post. Must be an HTML file within `dir` and relative to project root or a server endpoint path starting with `/api/`.",
              "default": "src/client/index.html"
            }
          }
        },

        "create": {
          "type": "object",
          "description": "Post creation config. By default, a new post is made on installation and a subreddit menu item is also provided.",
          "additionalProperties": false,
          "properties": {
            "title": {
              "type": "string",
              "description": "Title for newly created posts. Titles for past posts cannot be changed. Defaults to `name`."
            },
            "height": {
              "description": "Dimensions for web views in newly created posts.",
              "enum": ["regular", "tall"],
              "default": "regular"
            },
            "menu": {
              "type": "object",
              "description": "Post creation subreddit menu item config.",
              "additionalProperties": false,
              "properties": {
                "enable": {
                  "type": "boolean",
                  "description": "Whether the menu is shown.",
                  "default": true
                },
                "label": {
                  "type": "string",
                  "description": "Menu item text. Defaults to `\"[<name>] New Post\"` where \"<name>\" is `name`."
                },
                "scope": {
                  "description": "Users the post creation menu is shown to. `\"user\"` includes moderators.",
                  "enum": ["user", "moderator"],
                  "default": "moderator"
                }
              }
            },
            "onInstall": {
              "type": "boolean",
              "description": "Whether a new post is created on installation.",
              "default": true
            }
          }
        }
      }
    },

    "server": {
      "type": "object",
      "description": "Node.js server config. Enables server usage and `/api/` calls from the web view.",
      "additionalProperties": false,
      "properties": {
        "entry": {
          "type": "string",
          "description": "Server bundle filename relative project root. Must be a self-contained JavaScript file except for standard Node.js API imports. This code is private and server-side only.",
          "default": "src/server/index.js"
        }
      }
    },

    "blocks": {
      "type": "object",
      "description": "Blocks migration config.",
      "additionalProperties": false,
      "properties": {
        "entry": {
          "type": "string",
          "description": "TypeScript or JavaScript Blocks client entrypoint relative project root. Use for migration.",
          "default": "src/main.tsx",
          "deprecated": true
        }
      }
    }
  }
}
